volumes:
  postgres_data: {}
  ollama_data: {}

services:
  web:
    container_name: web-1
    build: 
      context: .
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    image: skillforge
    stdin_open: true
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - qcluster
    env_file:
      - ./dev.env
    restart: unless-stopped

  db:
    restart: always
    container_name: db-1
    image: postgres:16.2-bullseye
    env_file:
      - ./dev.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: "skillforge-dev"
      POSTGRES_USER: "skillforge"
      POSTGRES_PASSWORD: "skillforge"
  redis:
    container_name: redis-1
    image: redis:alpine
    env_file:
      - ./dev.env
    ports:
      - "6379:6379"
    hostname: redis
    restart: unless-stopped

  qcluster:
    container_name: qcluster-1
    build:
      context: .
      dockerfile: Dockerfile
    command: python manage.py qcluster
    volumes:
      - .:/code
    depends_on:
      - db
      - redis
    env_file:
      - ./dev.env
    restart: on-failure

  ollama:
    container_name: ollama-1
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_ORIGINS=http://localhost:8000,http://127.0.0.1:8000
    restart: unless-stopped

  ollama-setup:
    container_name: ollama-setup-1
    image: ollama/ollama:latest
    depends_on:
      - ollama
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=http://ollama-1:11434
    entrypoint: /bin/bash
    command: >
      -c "
        echo 'Waiting for Ollama to start...' &&
        sleep 20 &&
        ollama pull qwen2.5:7b &&
        ollama pull phi3.5:latest &&
        echo 'Modern models downloaded successfully!' &&
        ollama list
      "
    profiles:
      - setup
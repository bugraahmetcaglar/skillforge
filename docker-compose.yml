version: '3.7'

volumes:
  postgres_data: {}
  mongodb_data: {}
  mongodb_config: {}

services:
  web:
    build: 
      context: .
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    image: skillforge
    stdin_open: true
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - qcluster
    env_file:
      - ./dev.env
    restart: unless-stopped

  db:
    restart: always
    image: postgres:16.2-bullseye
    env_file:
      - ./dev.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: "skillforge-dev"
      POSTGRES_USER: "skillforge"
      POSTGRES_PASSWORD: "skillforge"

  mongodb:
    image: mongo:7.0
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    environment:
      MONGO_INITDB_ROOT_USERNAME: skillforge
      MONGO_INITDB_ROOT_PASSWORD: skillforge
      MONGO_INITDB_DATABASE: skillforge_logs
    command: mongod --auth

  mongo-express:
    image: mongo-express:latest
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: skillforge
      ME_CONFIG_MONGODB_ADMINPASSWORD: skillforge
      ME_CONFIG_MONGODB_URL: mongodb://skillforge:skillforge@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    depends_on:
      - mongodb

  redis:
    image: redis:alpine
    env_file:
      - ./dev.env
    ports:
      - "6379:6379"
    hostname: redis
    restart: unless-stopped

  qcluster:
    build:
      context: .
      dockerfile: Dockerfile
    command: python manage.py qcluster
    volumes:
      - .:/code
    depends_on:
      - db
      - redis
    env_file:
      - ./dev.env
    restart: on-failure